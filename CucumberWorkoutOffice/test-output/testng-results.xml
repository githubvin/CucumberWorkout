<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="3" ignored="0" total="3" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Default suite" duration-ms="899" started-at="2020-06-16T13:07:00 IST" finished-at="2020-06-16T13:07:01 IST">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:runner.BigBasketExamplesRunner@7a1ebcd8]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test name="Default test" duration-ms="899" started-at="2020-06-16T13:07:00 IST" finished-at="2020-06-16T13:07:01 IST">
      <class name="runner.BigBasketExamplesRunner">
        <test-method status="PASS" signature="setUpClass()[pri:0, instance:runner.BigBasketExamplesRunner@7a1ebcd8]" name="setUpClass" is-config="true" duration-ms="190" started-at="2020-06-16T13:07:00 IST" finished-at="2020-06-16T13:07:00 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method status="FAIL" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:runner.BigBasketExamplesRunner@7a1ebcd8]" name="runScenario" duration-ms="386" started-at="2020-06-16T13:07:00 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2020-06-16T13:07:00 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["To check the shopping in BigBasket with different locations."]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["BigBasket Workflow with Examples"]]>
              </value>
            </param>
          </params>
          <exception class="cucumber.runtime.CucumberException">
            <message>
              <![CDATA[You're not allowed to extend classes that define Step Definitions or hooks. class steps.BigBasketExamplesSteps extends class steps.HooksClass]]>
            </message>
            <full-stacktrace>
              <![CDATA[cucumber.runtime.CucumberException: You're not allowed to extend classes that define Step Definitions or hooks. class steps.BigBasketExamplesSteps extends class steps.HooksClass
at cucumber.runtime.java.MethodScanner.validateMethod(MethodScanner.java:74)
at cucumber.runtime.java.MethodScanner.scan(MethodScanner.java:60)
at cucumber.runtime.java.MethodScanner.scan(MethodScanner.java:41)
at cucumber.runtime.java.JavaBackend.loadGlue(JavaBackend.java:111)
at cucumber.runner.Runner.<init>(Runner.java:39)
at cucumber.runner.ThreadLocalRunnerSupplier.createRunner(ThreadLocalRunnerSupplier.java:42)
at cucumber.runner.ThreadLocalRunnerSupplier.access$000(ThreadLocalRunnerSupplier.java:13)
at cucumber.runner.ThreadLocalRunnerSupplier$1.initialValue(ThreadLocalRunnerSupplier.java:22)
at cucumber.runner.ThreadLocalRunnerSupplier$1.initialValue(ThreadLocalRunnerSupplier.java:19)
at java.lang.ThreadLocal.setInitialValue(Unknown Source)
at java.lang.ThreadLocal.get(Unknown Source)
at cucumber.runner.ThreadLocalRunnerSupplier.get(ThreadLocalRunnerSupplier.java:38)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:77)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:24)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- cucumber.runtime.CucumberException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="FAIL" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:runner.BigBasketExamplesRunner@7a1ebcd8]" name="runScenario" duration-ms="55" started-at="2020-06-16T13:07:00 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2020-06-16T13:07:00 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["To check the shopping in BigBasket with different locations."]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["BigBasket Workflow with Examples"]]>
              </value>
            </param>
          </params>
          <exception class="cucumber.runtime.CucumberException">
            <message>
              <![CDATA[You're not allowed to extend classes that define Step Definitions or hooks. class steps.BigBasketExamplesSteps extends class steps.HooksClass]]>
            </message>
            <full-stacktrace>
              <![CDATA[cucumber.runtime.CucumberException: You're not allowed to extend classes that define Step Definitions or hooks. class steps.BigBasketExamplesSteps extends class steps.HooksClass
at cucumber.runtime.java.MethodScanner.validateMethod(MethodScanner.java:74)
at cucumber.runtime.java.MethodScanner.scan(MethodScanner.java:60)
at cucumber.runtime.java.MethodScanner.scan(MethodScanner.java:41)
at cucumber.runtime.java.JavaBackend.loadGlue(JavaBackend.java:111)
at cucumber.runner.Runner.<init>(Runner.java:39)
at cucumber.runner.ThreadLocalRunnerSupplier.createRunner(ThreadLocalRunnerSupplier.java:42)
at cucumber.runner.ThreadLocalRunnerSupplier.access$000(ThreadLocalRunnerSupplier.java:13)
at cucumber.runner.ThreadLocalRunnerSupplier$1.initialValue(ThreadLocalRunnerSupplier.java:22)
at cucumber.runner.ThreadLocalRunnerSupplier$1.initialValue(ThreadLocalRunnerSupplier.java:19)
at java.lang.ThreadLocal.setInitialValue(Unknown Source)
at java.lang.ThreadLocal.get(Unknown Source)
at cucumber.runner.ThreadLocalRunnerSupplier.get(ThreadLocalRunnerSupplier.java:38)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:77)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:24)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- cucumber.runtime.CucumberException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="FAIL" signature="runScenario(io.cucumber.testng.PickleEventWrapper, io.cucumber.testng.CucumberFeatureWrapper)[pri:0, instance:runner.BigBasketExamplesRunner@7a1ebcd8]" name="runScenario" duration-ms="51" started-at="2020-06-16T13:07:00 IST" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2020-06-16T13:07:01 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA["To check the shopping in BigBasket with different locations."]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["BigBasket Workflow with Examples"]]>
              </value>
            </param>
          </params>
          <exception class="cucumber.runtime.CucumberException">
            <message>
              <![CDATA[You're not allowed to extend classes that define Step Definitions or hooks. class steps.BigBasketExamplesSteps extends class steps.HooksClass]]>
            </message>
            <full-stacktrace>
              <![CDATA[cucumber.runtime.CucumberException: You're not allowed to extend classes that define Step Definitions or hooks. class steps.BigBasketExamplesSteps extends class steps.HooksClass
at cucumber.runtime.java.MethodScanner.validateMethod(MethodScanner.java:74)
at cucumber.runtime.java.MethodScanner.scan(MethodScanner.java:60)
at cucumber.runtime.java.MethodScanner.scan(MethodScanner.java:41)
at cucumber.runtime.java.JavaBackend.loadGlue(JavaBackend.java:111)
at cucumber.runner.Runner.<init>(Runner.java:39)
at cucumber.runner.ThreadLocalRunnerSupplier.createRunner(ThreadLocalRunnerSupplier.java:42)
at cucumber.runner.ThreadLocalRunnerSupplier.access$000(ThreadLocalRunnerSupplier.java:13)
at cucumber.runner.ThreadLocalRunnerSupplier$1.initialValue(ThreadLocalRunnerSupplier.java:22)
at cucumber.runner.ThreadLocalRunnerSupplier$1.initialValue(ThreadLocalRunnerSupplier.java:19)
at java.lang.ThreadLocal.setInitialValue(Unknown Source)
at java.lang.ThreadLocal.get(Unknown Source)
at cucumber.runner.ThreadLocalRunnerSupplier.get(ThreadLocalRunnerSupplier.java:38)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:77)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:24)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:134)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:597)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:173)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:816)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:146)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(Unknown Source)
at org.testng.TestRunner.privateRun(TestRunner.java:766)
at org.testng.TestRunner.run(TestRunner.java:587)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:384)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:378)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:337)
at org.testng.SuiteRunner.run(SuiteRunner.java:286)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1187)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1109)
at org.testng.TestNG.runSuites(TestNG.java:1039)
at org.testng.TestNG.run(TestNG.java:1007)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- cucumber.runtime.CucumberException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method status="PASS" signature="tearDownClass()[pri:0, instance:runner.BigBasketExamplesRunner@7a1ebcd8]" name="tearDownClass" is-config="true" duration-ms="8" started-at="2020-06-16T13:07:01 IST" finished-at="2020-06-16T13:07:01 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runner.BigBasketExamplesRunner -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
